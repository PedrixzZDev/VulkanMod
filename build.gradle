plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

project.ext.lwjglVersion = "3.3.2"
project.ext.lwjglVersionAlt = "3.3.3"
project.ext.jomlVersion = "1.10.4"
project.ext.winNatives = "natives-windows"
project.ext.linuxNatives = "natives-linux"
project.ext.macosNatives = "natives-macos"
project.ext.macosArmNatives = "natives-macos-arm64"

dependencies {
    // LWJGL 3.3.2
    configurations.create('lwjgl322')
    configurations.create('lwjglRuntime322')
    
    include(lwjgl322("org.lwjgl:lwjgl-vulkan:${project.lwjglVersion}"))
    include(lwjgl322("org.lwjgl:lwjgl-vma:${project.lwjglVersion}"))
    include(lwjglRuntime322("org.lwjgl:lwjgl-vma:${project.lwjglVersion}:${project.winNatives}"))
    include(lwjglRuntime322("org.lwjgl:lwjgl-vma:${project.lwjglVersion}:${project.linuxNatives}"))
    include(lwjglRuntime322("org.lwjgl:lwjgl-vma:${project.lwjglVersion}:${project.macosNatives}"))
    include(lwjglRuntime322("org.lwjgl:lwjgl-vma:${project.lwjglVersion}:${project.macosArmNatives}"))
    include(lwjgl322("org.lwjgl:lwjgl-shaderc:${project.lwjglVersion}"))
    include(lwjglRuntime322("org.lwjgl:lwjgl-shaderc:${project.lwjglVersion}:${project.winNatives}"))
    include(lwjglRuntime322("org.lwjgl:lwjgl-shaderc:${project.lwjglVersion}:${project.linuxNatives}"))
    include(lwjglRuntime322("org.lwjgl:lwjgl-shaderc:${project.lwjglVersion}:${project.macosNatives}"))
    include(lwjglRuntime322("org.lwjgl:lwjgl-shaderc:${project.lwjglVersion}:${project.macosArmNatives}"))
    include(lwjglRuntime322("org.lwjgl:lwjgl-vulkan:${project.lwjglVersion}:${project.macosNatives}"))
    include(lwjglRuntime322("org.lwjgl:lwjgl-vulkan:${project.lwjglVersion}:${project.macosArmNatives}"))

    // LWJGL 3.3.3
    configurations.create('lwjgl333')
    configurations.create('lwjglRuntime333')
    
    include(lwjgl333("org.lwjgl:lwjgl-vulkan:${project.lwjglVersionAlt}"))
    include(lwjgl333("org.lwjgl:lwjgl-vma:${project.lwjglVersionAlt}"))
    include(lwjglRuntime333("org.lwjgl:lwjgl-vma:${project.lwjglVersionAlt}:${project.winNatives}"))
    include(lwjglRuntime333("org.lwjgl:lwjgl-vma:${project.lwjglVersionAlt}:${project.linuxNatives}"))
    include(lwjglRuntime333("org.lwjgl:lwjgl-vma:${project.lwjglVersionAlt}:${project.macosNatives}"))
    include(lwjglRuntime333("org.lwjgl:lwjgl-vma:${project.lwjglVersionAlt}:${project.macosArmNatives}"))
    include(lwjgl333("org.lwjgl:lwjgl-shaderc:${project.lwjglVersionAlt}"))
    include(lwjglRuntime333("org.lwjgl:lwjgl-shaderc:${project.lwjglVersionAlt}:${project.winNatives}"))
    include(lwjglRuntime333("org.lwjgl:lwjgl-shaderc:${project.lwjglVersionAlt}:${project.linuxNatives}"))
    include(lwjglRuntime333("org.lwjgl:lwjgl-shaderc:${project.lwjglVersionAlt}:${project.macosNatives}"))
    include(lwjglRuntime333("org.lwjgl:lwjgl-shaderc:${project.lwjglVersionAlt}:${project.macosArmNatives}"))
    include(lwjglRuntime333("org.lwjgl:lwjgl-vulkan:${project.lwjglVersionAlt}:${project.macosNatives}"))
    include(lwjglRuntime333("org.lwjgl:lwjgl-vulkan:${project.lwjglVersionAlt}:${project.macosArmNatives}"))
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Needed in order to load mod namespace
	ext.includeModule = { name ->
		var module = fabricApi.module(name, project.fabric_version)
		modImplementation(module)
		include(module)
	}

	includeModule("fabric-api-base")
	includeModule("fabric-resource-loader-v0")
	includeModule("fabric-rendering-fluids-v1")
	includeModule("fabric-rendering-v1")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

loom {
    accessWidenerPath = file("src/main/resources/vulkanmod.accesswidener")
}

java {
}

task buildLwjgl32(type: Jar) {
    from sourceSets.main.output
    configurations.lwjgl322.forEach { file -> from(zipTree(file)) }
    configurations.lwjglRuntime322.forEach { file -> from(zipTree(file)) }
    archiveBaseName = "${archivesBaseName}-lwjgl-3.3.2"
    archiveVersion = version
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task buildLwjgl33(type: Jar) {
    from sourceSets.main.output
    configurations.lwjgl333.forEach { file -> from(zipTree(file)) }
    configurations.lwjglRuntime333.forEach { file -> from(zipTree(file)) }
    archiveBaseName = "${archivesBaseName}-lwjgl-3.3.3"
    archiveVersion = version
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

publishing {
    publications {
        lwjgl32(MavenPublication) {
            artifact tasks.buildLwjgl32
        }
        lwjgl33(MavenPublication) {
            artifact tasks.buildLwjgl33
        }
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}
