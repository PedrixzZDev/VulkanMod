plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

project.ext.lwjglVersion = "3.3.2"
project.ext.lwjglVersionAlt = "3.3.3"
project.ext.jomlVersion = "1.10.4"
project.ext.winNatives = "natives-windows"
project.ext.linuxNatives = "natives-linux"
project.ext.macosNatives = "natives-macos"
project.ext.macosArmNatives = "natives-macos-arm64"

// Separate configurations for LWJGL versions
configurations {
    lwjgl322
    lwjglRuntime322
    lwjgl333
    lwjglRuntime333
}

dependencies {
    // LWJGL 3.3.2
    implementation "org.lwjgl:lwjgl-vulkan:${project.lwjglVersion}"
    implementation "org.lwjgl:lwjgl-vma:${project.lwjglVersion}"
    runtimeOnly "org.lwjgl:lwjgl-vma:${project.lwjglVersion}:${project.winNatives}"
    runtimeOnly "org.lwjgl:lwjgl-vma:${project.lwjglVersion}:${project.linuxNatives}"
    runtimeOnly "org.lwjgl:lwjgl-vma:${project.lwjglVersion}:${project.macosNatives}"
    runtimeOnly "org.lwjgl:lwjgl-vma:${project.lwjglVersion}:${project.macosArmNatives}"
    implementation "org.lwjgl:lwjgl-shaderc:${project.lwjglVersion}"
    runtimeOnly "org.lwjgl:lwjgl-shaderc:${project.lwjglVersion}:${project.winNatives}"
    runtimeOnly "org.lwjgl:lwjgl-shaderc:${project.lwjglVersion}:${project.linuxNatives}"
    runtimeOnly "org.lwjgl:lwjgl-shaderc:${project.lwjglVersion}:${project.macosNatives}"
    runtimeOnly "org.lwjgl:lwjgl-shaderc:${project.lwjglVersion}:${project.macosArmNatives}"
    runtimeOnly "org.lwjgl:lwjgl-vulkan:${project.lwjglVersion}:${project.macosNatives}"
    runtimeOnly "org.lwjgl:lwjgl-vulkan:${project.lwjglVersion}:${project.macosArmNatives}"

    // LWJGL 3.3.3
    implementation "org.lwjgl:lwjgl-vulkan:${project.lwjglVersionAlt}"
    implementation "org.lwjgl:lwjgl-vma:${project.lwjglVersionAlt}"
    runtimeOnly "org.lwjgl:lwjgl-vma:${project.lwjglVersionAlt}:${project.winNatives}"
    runtimeOnly "org.lwjgl:lwjgl-vma:${project.lwjglVersionAlt}:${project.linuxNatives}"
    runtimeOnly "org.lwjgl:lwjgl-vma:${project.lwjglVersionAlt}:${project.macosNatives}"
    runtimeOnly "org.lwjgl:lwjgl-vma:${project.lwjglVersionAlt}:${project.macosArmNatives}"
    implementation "org.lwjgl:lwjgl-shaderc:${project.lwjglVersionAlt}"
    runtimeOnly "org.lwjgl:lwjgl-shaderc:${project.lwjglVersionAlt}:${project.winNatives}"
    runtimeOnly "org.lwjgl:lwjgl-shaderc:${project.lwjglVersionAlt}:${project.linuxNatives}"
    runtimeOnly "org.lwjgl:lwjgl-shaderc:${project.lwjglVersionAlt}:${project.macosNatives}"
    runtimeOnly "org.lwjgl:lwjgl-shaderc:${project.lwjglVersionAlt}:${project.macosArmNatives}"
    runtimeOnly "org.lwjgl:lwjgl-vulkan:${project.lwjglVersionAlt}:${project.macosNatives}"
    runtimeOnly "org.lwjgl:lwjgl-vulkan:${project.lwjglVersionAlt}:${project.macosArmNatives}"
}

repositories {
    // Add repositories to retrieve artifacts from in here.
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Needed in order to load mod namespace
    ext.includeModule = { name ->
        def module = fabricApi.module(name, project.fabric_version)
        modImplementation(module)
        include(module)
    }

    includeModule("fabric-api-base")
    includeModule("fabric-resource-loader-v0")
    includeModule("fabric-rendering-fluids-v1")
    includeModule("fabric-rendering-v1")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

loom {
    accessWidenerPath = file("src/main/resources/vulkanmod.accesswidener")
}

java {
}

task buildLwjgl322(type: Jar) {
    from sourceSets.main.output
    configurations.lwjgl322.forEach { file -> from(zipTree(file)) }
    configurations.lwjglRuntime322.forEach { file -> from(zipTree(file)) }
    archiveBaseName = "${archivesBaseName}-lwjgl-3.3.2"
    archiveVersion = version
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task buildLwjgl333(type: Jar) {
    from sourceSets.main.output
    configurations.lwjgl333.forEach { file -> from(zipTree(file)) }
    configurations.lwjglRuntime333.forEach { file -> from(zipTree(file)) }
    archiveBaseName = "${archivesBaseName}-lwjgl-3.3.3"
    archiveVersion = version
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

publishing {
    publications {
        lwjgl322(MavenPublication) {
            artifact tasks.buildLwjgl322
        }
        lwjgl333(MavenPublication) {
            artifact tasks.buildLwjgl333
        }
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
